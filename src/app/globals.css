@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    html {
        font-family: var(--font-poppins);
    }
}

.gradient {
    @apply bg-gradient-to-r from-[#34eaa0] to-[#0fa2e9] text-transparent bg-clip-text
}


@keyframes fadeInOut {
    0%, 100% {
        opacity: 1;
    }
    25% {
        opacity: 0.25;
    }
    50% {
        opacity: 0.5;
    }
}

.fadeInOut {
    animation: fadeInOut 7s ease-in-out infinite;
    opacity: 0;
}

@keyframes fly {
    0% {
        transform: translateX(0) translateY(0) scale(1);
    }
    50% {
        transform: translateY(43vh) translateX(43vw) scale(1.3);
    }
    100% {
        transform: translateX(45vw) translateY(64vh) scale(1.4);
    }
}

.animate-fly {
    animation: fly 7s forwards;
}

.hero-drone {
    animation: drone 20s linear infinite;
}

@keyframes drone {
    0% {
        transform: translateY(-20px);
    }
    50% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(-20px);
    }
}

.back {
    background: #7ee787;
    filter: blur(180px);
}

.box-shadow-card {
    box-shadow: 0 3px 2px rgba(0, 0, 0, .04), 0 7px 5px rgba(0, 0, 0, .02), 0 13px 10px rgba(0, 0, 0, .02), 0 22px 17px rgba(0, 0, 0, .02) !important;
}

.shadow-glow {
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.7), 0 0 30px rgba(255, 0, 0, 0.5), 0 0 45px rgba(255, 0, 0, 0.3);
    animation: fadeColor 5s ease-in-out infinite;
}

@keyframes fadeColor {
    0%, 100% {
        opacity: 0.3;
    }
    50% {
        opacity: 1;
    }
}


@property --progress {
    syntax: '<number>';
    initial-value: 0;
    inherits: false;
}

@keyframes translate {
    from {
        --progress: 0;
    }
    to {
        --progress: 1;
    }
}

.upanddown {
    --radius-x: 100px;
    --radius-y: calc(var(--radius-x) * 0.2);
    animation: translate 15s linear infinite;
    transform: translateY(calc(cos(var(--progress) * 6.28rad) * var(--radius-y) + 50px));
}


@keyframes translate {
    0% {
        --progress: 0.65;
    }
    to {
        --progress: -0.35;
    }
}

.planet-animation {
    --radius-x: 100px;
    --radius-y: calc(var(--radius-x) * 0.7);
    animation: translate 50s linear infinite;
    transform: rotate(calc(var(--progress) * 360deg + 150deg))
    translate(
            calc(sin(var(--progress) * 6.28rad) * var(--radius-x)),
            calc(cos(var(--progress) * 6.28rad) * var(--radius-y))
    );
}

@keyframes pulse {
    0% {
        opacity: 0.7;
    }
    50% {
        opacity: 0.4;
    }
    100% {
        opacity: 0.7;
    }
}

.skeleton-text {
    animation: pulse 1.5s infinite;
}

